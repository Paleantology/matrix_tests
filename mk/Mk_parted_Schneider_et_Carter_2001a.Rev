print("Processing partitioned Script")

br_len_lambda ~ dnExp(0.2)
moves.append(mvScale(br_len_lambda, weight=2))

# Set up Gamma-distributed rate variation.
alpha_morpho ~ dnUniform( 0.0, 1E6 )
rates_morpho := fnDiscretizeGamma( alpha_morpho, alpha_morpho, 4 )

# Moves on the parameters to the Gamma distribution.
moves.append( mvScale(alpha_morpho, lambda=1, weight=2.0) )


## Tree definition

phylogeny ~ dnUniformTopologyBranchLength(taxa, branchLengthDistribution=dnExponential(br_len_lambda))
moves.append(mvNNI(phylogeny, weight=n_branches/2.0))
moves.append(mvSPR(phylogeny, weight=n_branches/10.0))
moves.append(mvBranchLengthScale(phylogeny, weight=n_branches))
tree_length := phylogeny.treeLength()


morpho_u <- morpho
morpho_u.excludeCharacter(v(32,33))
n_max_states <- 10
idx = 1
morpho_unordered[1] <- morpho_u
for (i in 2:n_max_states) {
    morpho_unordered[i] <- morpho                                # make local tmp copy of data
    morpho_unordered[i].setNumStatesPartition(i)                 # only keep character blocks with state space equal to size i
    nc = morpho_unordered[i].nchar()                             # get number of characters per character size with i-sized states

    if (nc > 0) {                                              # for non-empty character blocks
        q[idx] <- fnJC(i)                                      # make i-by-i rate matrix
        m_morph[idx] ~ dnPhyloCTMC( tree=phylogeny,
                                    Q=q[idx],
                                    nSites=nc,
                                    siteRates=rates_morpho,
                                    type="Standard")           # create model of evolution for the character block

        m_morph[idx].clamp(morpho_unordered[i])                  # attach the data

        idx = idx + 1                                          # increment counter
        idx
    }
}

#step_A
morpho_s <- morpho
morpho_s.excludeCharacter(v(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48))

r1=1
r2=2
r3=3
r4=4
r5=5
r6=6
r7=7
r8=8

diag_rates := [[0.0,r1,r2,r3,r4,r4,r5,r6,r7,r8,r8,r7,r7],
               [r1,0.0,r1,r2,r3,r3,r4,r5,r6,r7,r7,r6,r6],
               [r2,r1,0.0,r1,r2,r2,r3,r4,r5,r6,r6,r5,r5],
               [r3,r2,r1,0.0,r3,r3,r4,r5,r6,r7,r7,r6,r6],
               [r4,r3,r2,r3,0.0,r2,r3,r4,r5,r6,r6,r5,r5],
               [r4,r3,r2,r3,r2,0.0,r1,r2,r3,r4,r4,r3,r3],
               [r5,r4,r3,r4,r3,r1,0.0,r1,r2,r3,r3,r2,r2],
               [r6,r5,r4,r5,r4,r2,r1,0.0,r1,r2,r2,r1,r1],
               [r7,r6,r5,r6,r5,r3,r2,r1,0.0,r1,r1,r2,r2],
               [r8,r7,r6,r7,r6,r4,r3,r2,r1,0.0,r2,r3,r3],
               [r8,r7,r6,r7,r6,r4,r3,r2,r1,r2,0.0,r3,r3],
               [r7,r6,r5,r6,r5,r3,r2,r1,r2,r3,r3,0.0,r1],
               [r7,r6,r5,r6,r5,r3,r2,r1,r2,r3,r3,r1,0.0]]

Q_s := fnFreeK(diag_rates)
s_morph ~ dnPhyloCTMC( tree=phylogeny,
                            Q=Q_s,
                            nSites=nc,
                            siteRates=rates_morpho,
                            type="Standard")
s_morph.clamp(morpho_s)


#step_B
morpho_s2 <- morpho
morpho_s2.excludeCharacter(v(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48))

r1=1
r2=2
r3=3
r4=4

diag_rates := [[0.0,r1,r2,r3,r4,r2],
               [r1,0.0,r1,r2,r3,r1],
               [r2,r1,0.0,r1,r2,r2],
               [r3,r2,r1,0.0,r1,r3],
               [r4,r3,r2,r1,0.0,r4],
               [r2,r1,r2,r3,r4,0.0]]

Q_s2 := fnFreeK(diag_rates)
s2_morph ~ dnPhyloCTMC( tree=phylogeny,
                            Q=Q_s2,
                            nSites=nc,
                            siteRates=rates_morpho,
                            type="Standard")
s2_morph.clamp(morpho_s2)
