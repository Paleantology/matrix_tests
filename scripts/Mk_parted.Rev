print("Processing partitioned Script")

br_len_lambda ~ dnExp(0.2)
moves.append(mvScale(br_len_lambda, weight=2))

# Set up Gamma-distributed rate variation.
alpha_morpho ~ dnUniform( 0.0, 1E6 )
rates_morpho := fnDiscretizeGamma( alpha_morpho, alpha_morpho, 4 )

# Moves on the parameters to the Gamma distribution.
moves.append( mvScale(alpha_morpho, lambda=1, weight=2.0) )


## Tree definition

phylogeny ~ dnUniformTopologyBranchLength(taxa, branchLengthDistribution=dnExponential(br_len_lambda))
moves.append(mvNNI(phylogeny, weight=n_branches/2.0))
moves.append(mvSPR(phylogeny, weight=n_branches/10.0))
moves.append(mvBranchLengthScale(phylogeny, weight=n_branches))
tree_length := phylogeny.treeLength()

# First, we establish our partitionfinder partitions

# In the below, what we do is make a vector of data partitions in which we have excluded the other partitions.
# This is tricky because you'll need to find some way to get in the number of partitions and which characters
# need to be excluded from which
lambda = 1
mu = 1
Q_o <- fnOrderedRateMatrix(maxState, lambda, mu) #max_state is the largest character state
morpho_part[1] <- morpho
morpho_part[1].excludeCharacter()
m_morph[2] ~ dnPhyloCTMC(tree=phylogeny, siteRates=rates_morpho,
                              Q=Q_o, type="Standard")
m_morph[2].clamp(morpho_part[2])


Q <- fnJC(i) #largest character state
morpho_part[2] <- morpho
morpho_part[2].excludeCharacter()
m_morph[2] ~ dnPhyloCTMC(tree=phylogeny, siteRates=rates_morpho,
                              Q=Q, type="Standard")
m_morph[2].clamp(morpho_part[2])
